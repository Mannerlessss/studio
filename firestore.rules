rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/admins/$(request.auth.uid)).data.isAdmin == true;
    }

    // Helper function to check if the user is the owner of the document
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Users can read their own document and admins can read any.
    // Users can update specific fields on their own document.
    match /users/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow update: if isOwner(userId) && (
                      request.resource.data.name == resource.data.name ||
                      request.resource.data.phone == resource.data.phone ||
                      (request.resource.data.diff(resource.data).affectedKeys()
                        .hasOnly(['name', 'phone', 'lastLogin', 'lastBonusClaim', 'redeemedOfferCodes', 'totalBalance', 'totalBonusEarnings', 'totalEarnings', 'hasCollectedSignupBonus']))
                    );
      allow create: if request.auth != null;

      // Users can manage their own subcollections
      match /investments/{investmentId} {
        allow read: if isOwner(userId) || isAdmin();
        allow create, update, delete: if isAdmin(); // Only admins can modify investments
      }

      match /transactions/{transactionId} {
        allow read: if isOwner(userId) || isAdmin();
        allow create: if isOwner(userId) || isAdmin();
        allow update, delete: if isAdmin();
      }

      match /referrals/{referralId} {
        allow read, create: if isOwner(userId) || isAdmin();
        allow update, delete: if isAdmin();
      }

      match /withdrawals/{withdrawalId} {
        allow read: if isOwner(userId) || isAdmin();
        allow create: if isOwner(userId);
        allow update: if isAdmin(); // Only admins can approve/reject
        allow delete: if isAdmin();
      }
    }

    // Admins can read the list of admins
    match /admins/{adminId} {
        allow read: if isAdmin();
    }

    // Offer codes can be read by any authenticated user (for redemption)
    // but only created/updated/deleted by admins.
    match /offers/{offerId} {
      allow read: if request.auth != null;
      allow create, update, delete: if isAdmin();
    }
  }
}