rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true || request.auth.token.admin == true;
    }

    // Helper function to check if the user is the owner of the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users can read their own document and admins can read any.
    // Users can create their own document on signup.
    // Users can only update their own name and phone number.
    match /users/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow create: if isOwner(userId);
      allow update: if (isOwner(userId) && request.resource.data.keys().hasOnly(['name', 'phone', 'lastLogin', 'hasCollectedSignupBonus', 'usedReferralCode', 'redeemedOfferCodes', 'lastBonusClaim'])) || isAdmin();
      allow delete: if isAdmin();

      // Subcollections
      match /{subcollection}/{docId} {
        allow read, write: if isOwner(userId) || isAdmin();
      }
    }
    
    // Offers can be read by any authenticated user (to check validity)
    // Offers can only be created, updated, or deleted by an admin.
    match /offers/{offerId} {
        allow read: if request.auth != null;
        allow write: if isAdmin();
    }
  }
}
