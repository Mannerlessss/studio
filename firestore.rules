rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin custom claim
    function isAdmin() {
      return request.auth != null && request.auth.token.admin == true;
    }

    // Plans: Logged-in users can read, only Admin SDK can write.
    match /plans/{planId} {
      allow read: if request.auth != null;
      allow write: if false; // Deployed/created via Admin SDK
    }

    // Offers: Logged-in users can read, only Admin can write.
    match /offers/{offerId} {
      allow read: if request.auth != null;
      allow create, update, delete: if isAdmin();
    }

    // Users Collection
    match /users/{userId} {
      // Allow user creation for anyone signing up.
      allow create: if request.auth != null;
      
      // Users can read/update their own document.
      allow get, update: if request.auth != null && request.auth.uid == userId;

      // Admins can read any user's document.
      allow get: if isAdmin();

      // Only allow LIST (queries) for authenticated users.
      // This is required for referral code lookup during signup.
      // Note: This does not allow reading the *content* of documents, only querying them.
      // The `get` rule above still protects individual document reads.
      allow list: if request.auth != null;
      
      // Users can only delete themselves. Admins can delete anyone.
      allow delete: if (request.auth != null && request.auth.uid == userId) || isAdmin();

      // Subcollections (investments, transactions, etc.)
      match /{subcollection}/{docId} {
        // Users can read/write their own subcollection documents.
        // Admins can read any user's subcollection documents.
        allow read, write: if (request.auth != null && request.auth.uid == userId) || isAdmin();
      }
    }
    
    // This allows collection group queries by admins (e.g., for all withdrawals)
    match /{path=**}/withdrawals/{withdrawalId} {
        allow read: if isAdmin();
    }
  }
}
