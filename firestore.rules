rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check for admin custom claim
    function isAdmin() {
      return request.auth.token.admin == true;
    }
    
    // Helper function to check if user is owner of the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // USERS COLLECTION
    // Admins can read the full list of users.
    // Users can only read/write their own document.
    match /users/{userId} {
      allow read, write: if isOwner(userId);
      allow list: if isAdmin();
      
      // USER SUB-COLLECTIONS
      // Users can perform any action on sub-collections within their own document.
      // This is secure because the parent match already ensures they are the owner.
      match /{allPaths=**} {
        allow read, write: if isOwner(userId);
      }
    }
    
    // WITHDRAWALS (Collection Group)
    // This allows admins to query the 'withdrawals' sub-collection across ALL users.
    // This is required for the admin withdrawals page.
    match /{path=**}/withdrawals/{withdrawalId} {
      allow read: if isAdmin();
    }
    
    // PLANS & OFFERS (Global Collections)
    // Any authenticated user can read plans and offers.
    // Only admins can create, update, or delete them.
    match /plans/{planId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    match /offers/{offerId} {
       allow read: if request.auth != null;
       allow write: if isAdmin();
    }
  }
}
    