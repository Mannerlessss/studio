rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role
    function isAdmin() {
      return request.auth.token.admin == true;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Admins can read any user document
      allow get, list: if isAdmin();
      
      // Users can only create their own document, and read/update their own document.
      allow create: if request.auth.uid != null;
      allow get, update: if request.auth.uid == userId;

      // Rules for subcollections within a user document
      match /{subcollection}/{docId} {
        // Admins can read any document in any subcollection
        allow get, list: if isAdmin();
        // Users can perform any action on their own subcollections
        allow read, write: if request.auth.uid == userId;
      }
    }

    // Rules for the 'offers' collection
    match /offers/{offerId} {
        // Admins can perform any action on offers
        allow read, write: if isAdmin();
        // Regular users can only read offers
        allow get, list: if request.auth.uid != null;
    }
    
    // Rules for the 'plans' collection
    match /plans/{planId} {
        // Admins can manage plans
        allow read, write: if isAdmin();
        // Users can read plans
        allow get, list: if request.auth.uid != null;
    }

    // Collection group query for withdrawals - for Admin Panel
    match /{path=**}/withdrawals/{withdrawalId} {
      allow get, list: if isAdmin();
    }
  }
}
