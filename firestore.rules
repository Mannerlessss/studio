rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check for admin custom claim
    function isAdmin() {
      return request.auth.token.admin == true;
    }

    // Plans collection is readable by any authenticated user
    match /plans/{planId} {
      allow read: if request.auth != null;
      allow write: if isAdmin(); // Only admins can create/edit plans
    }

    // Offers collection is readable by any authenticated user
    match /offers/{offerId} {
      allow read: if request.auth != null;
      allow write: if isAdmin(); // Only admins can create/edit offers
    }

    // Users Collection
    match /users/{userId} {
      // Users can read and write to their OWN document.
      // Admins can read any user document.
      allow get, update, delete: if request.auth.uid == userId;
      allow create: if request.auth.uid == userId;
      allow read: if request.auth.uid == userId || isAdmin();

      // Admins can list all users, but regular users cannot.
      allow list: if isAdmin();

      // Users can access their own subcollections.
      // Admins can read any subcollection.
      match /{subcollection}/{docId} {
        allow read, write: if request.auth.uid == userId;
        allow read: if isAdmin();
      }
    }

    // Withdrawals are a subcollection, but we might need a collectionGroup query for admins.
    match /{path=**}/withdrawals/{withdrawalId} {
      allow read, write: if exists(/databases/$(database)/documents/users/$(request.auth.uid)) || isAdmin();
    }
  }
}
