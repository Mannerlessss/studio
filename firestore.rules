
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }

    // Helper function to check if the user is the owner of the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users can read and write their own data.
    // They can only create their own user document.
    match /users/{userId} {
      allow read, update, delete: if isSignedIn() && isOwner(userId);
      allow create: if isSignedIn();
      
      // Users can read and write to their own subcollections
      match /{allSubcollections}/{docId} {
        allow read, write: if isSignedIn() && isOwner(userId);
      }
    }
    
    // Offers can be read by any authenticated user, but only created/modified
    // by admin backend processes (not covered by client-side rules).
    match /offers/{offerId} {
      allow read: if isSignedIn();
      allow write: if false; // Disallow client-side writes
    }

    // Withdrawals are handled within the user's subcollection, covered above.
    // This is a catch-all to ensure no top-level access.
    match /withdrawals/{withdrawalId} {
      allow read, write: if false;
    }
  }
}
