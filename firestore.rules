rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAdmin() {
      // The custom claim is 'admin', not 'role'.
      return request.auth.token.admin == true;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // A user can get, write, update and delete their OWN document.
      // An admin can do anything to any user document.
      allow read, write: if request.auth.uid == userId || isAdmin();

      // Allow users to access their own subcollections.
      match /investments/{investmentId} {
        allow read, write: if request.auth.uid == userId || isAdmin();
      }
      match /transactions/{transactionId} {
        allow read, write: if request.auth.uid == userId || isAdmin();
      }
      match /withdrawals/{withdrawalId} {
        allow read, write: if request.auth.uid == userId || isAdmin();
      }
       match /referrals/{referralId} {
        allow read, write: if request.auth.uid == userId || isAdmin();
      }
    }

    // Rules for global 'plans' and 'offers' that admins manage
    match /plans/{planId} {
        allow read: if request.auth != null; // Any authenticated user can read
        allow write: if isAdmin(); // Only admins can write
    }
    match /offers/{offerId} {
        allow read: if request.auth != null;
        allow write: if isAdmin();
    }
    
    // Collection group queries for Admin panel
    // This allows admins to query across subcollections of all users.
    match /{path=**}/withdrawals/{withdrawalId} {
      allow read, list: if isAdmin();
    }
  }
}
