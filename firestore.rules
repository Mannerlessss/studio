rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Admin has full access to everything
    match /{document=**} {
      allow read, write: if request.auth.token.admin == true;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Allow a user to read their own document
      allow read: if request.auth.uid == userId;

      // Allow a user to update their own document (e.g., name, phone)
      allow update: if request.auth.uid == userId;

      // Allow any authenticated user to create their own user document during sign-up
      allow create: if request.auth.uid != null;
      
      // Prevent users from deleting their own accounts directly
      allow delete: if false;

      // Rules for user subcollections
      match /transactions/{transactionId} {
        allow read, create: if request.auth.uid == userId;
        // Prevent accidental updates/deletes from client
        allow update, delete: if false;
      }

      match /withdrawals/{withdrawalId} {
        allow read, create: if request.auth.uid == userId;
        // Admin handles updates (approve/reject), client should not update
        allow update: if false; 
        allow delete: if false;
      }
      
      match /referrals/{referralId} {
        allow read: if request.auth.uid == userId;
        // Subcollection is managed by server logic, not client
        allow create, update, delete: if false; 
      }
    }

    // Rules for the 'offers' collection
    match /offers/{offerId} {
      // Allow any logged-in user to read offer details
      allow read: if request.auth.uid != null;
      
      // Writes are handled by admins only (covered by the global admin rule)
      allow write: if false;
    }
  }
}
