rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role
    function isAdmin() {
      return request.auth != null && request.auth.token.role == "admin";
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Admins can read/write any user document.
      // Regular users can only read/write their own document.
      allow read, write: if request.auth.uid == userId || isAdmin();

      // Rules for all subcollections within a user document
      match /{allSubcollections}/{docId} {
        allow read, write: if request.auth.uid == userId || isAdmin();
      }
    }
    
    // Rules for global 'plans' collection
    match /plans/{planId} {
        // Any authenticated user can read plans
        allow read: if request.auth != null;
        // Only admins can create, update, or delete plans
        allow write: if isAdmin();
    }

    // Rules for global 'offers' collection
    match /offers/{offerId} {
        // Any authenticated user can read offers
        allow read: if request.auth != null;
        // Only admins can create, update, or delete offers
        allow write: if isAdmin();
    }

    // This rule is specifically for the Admin Panel's 'Withdrawals' page.
    // It allows an admin to perform a 'collectionGroup' query across all
    // 'withdrawals' subcollections in the entire database.
    match /{path=**}/withdrawals/{withdrawalId} {
      allow list: if isAdmin();
    }
  }
}
