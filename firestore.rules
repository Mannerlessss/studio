
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is an admin
    function isAdmin() {
      return request.auth.token.admin == true;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Admins can read any user document and list all users
      allow get, list: if isAdmin();
      
      // A user can read, update, and delete their own document
      allow get, update, delete: if request.auth.uid == userId;

      // A user can create their own document (on signup)
      allow create: if request.auth.uid == userId;

      // Rules for all subcollections within a user document
      match /{allPaths=**} {
        // A user can read and write to their own subcollections
        allow read, write: if request.auth.uid == userId;
        // Admins can also read any user's subcollections
        allow read: if isAdmin();
      }
    }

    // Rules for the 'withdrawals' collection group
    // This allows admins to query all withdrawals across all users
    match /{path=**}/withdrawals/{withdrawalId} {
        allow read: if isAdmin();
    }
    
    // Rules for the global 'plans' collection
    match /plans/{planId} {
        // Any authenticated user can read the plans
        allow read: if request.auth != null;
        // Only admins can create, update, or delete plans
        allow write: if isAdmin();
    }

    // Rules for the global 'offers' collection
    match /offers/{offerId} {
        // Any authenticated user can read the offers (to check them)
        allow read: if request.auth != null;
        // Only admins can create, update, or delete offers
        allow write: if isAdmin();
    }
  }
}
