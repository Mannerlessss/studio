rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin custom claim
    function isAdmin() {
      return request.auth != null && request.auth.token.admin == true;
    }

    //
    // USER-ACCESSIBLE COLLECTIONS
    //
    
    // Users can only read and write to their OWN document and subcollections.
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;

      // Allow users to read and write to THEIR OWN subcollections
      match /investments/{investmentId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      match /transactions/{transactionId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      match /referrals/{referralId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      match /withdrawals/{withdrawalId} {
      	allow create, read: if request.auth.uid == userId;
        allow update: if (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['status'])) && isAdmin();
      }
    }
    
    // Any authenticated user can read the global investment plans and offers.
    // Only admins can create, update, or delete them.
    match /plans/{planId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    match /offers/{offerId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }

    //
    // ADMIN-ONLY ACCESS
    // These rules allow admins to query collections for the admin panel.
    //
    match /users/{userId} {
      // Admins can list and get any user document
      allow list, get: if isAdmin();
    }
    
    match /withdrawals/{docId} {
       allow read, list: if isAdmin();
    }
    
    // Firestore requires a rule for the collection group query used by the admin panel.
    match /{path=**}/withdrawals/{docId} {
        allow read: if isAdmin();
    }
  }
}
