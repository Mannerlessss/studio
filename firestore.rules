rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check for admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Allow user to create their own document on sign-up
      allow create: if request.auth.uid != null;

      // Allow user to read, update, and delete their own document
      // Also allow admin to read and update any user document
      allow get, update, delete: if request.auth.uid == userId || isAdmin();
      
      // Allow any authenticated user to read a user doc (e.g., for referral code lookup)
      // but only if they are not trying to list all users.
      // This is safe because user-specific sensitive data isn't top-level.
      allow list: if isAdmin();
      allow read: if request.auth.uid != null || isAdmin();


      // Subcollections
      match /investments/{investmentId} {
        allow read, write: if request.auth.uid == userId || isAdmin();
      }
      match /transactions/{transactionId} {
        allow read, write: if request.auth.uid == userId || isAdmin();
      }
      match /withdrawals/{withdrawalId} {
         allow create, read: if request.auth.uid == userId;
         allow list, update, delete: if isAdmin();
      }
      match /referrals/{referralId} {
        allow create, read, update: if request.auth.uid == userId || isAdmin();
      }
    }

    // Rules for the 'offers' collection
    match /offers/{offerId} {
      // Any authenticated user can read offers (e.g., to see if a code exists)
      allow get: if request.auth.uid != null;
      // Only admins can create, update, delete, or list all offers
      allow list, create, update, delete: if isAdmin();
    }
    
    // Group rule for all withdrawal collections for admin queries
    match /{path=**}/withdrawals/{withdrawalId} {
        allow read, list: if isAdmin();
    }
  }
}
