rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check for admin role
    function isAdmin() {
      return request.auth.token.admin == true;
    }

    // Helper function to check if the user is the owner of the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Default Deny: No one can access anything unless explicitly allowed.
    match /{document=**} {
      allow read, write: if false;
    }

    // Admins have god-mode access to everything
    match /{document=**} {
      allow read, write: if isAdmin();
    }
    
    // Rules for the 'users' collection
    match /users/{userId} {
      allow get, update, delete: if isOwner(userId);
      allow create: if request.auth != null;
      allow list: if request.auth != null;
    }

    // Rules for all subcollections within a user's document
    match /users/{userId}/{subcollection}/{docId} {
        allow read, write, create, delete: if isOwner(userId);
    }
    
    // Rules for the 'offers' collection
    match /offers/{offerId} {
      allow read: if request.auth != null;
      // Write access for offers is handled by admin rule
    }
  }
}
