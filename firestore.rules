rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if the user is an admin
    function isAdmin() {
      return request.auth != null && request.auth.token.admin == true;
    }

    // Helper function to check if the user is the owner of the data
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Admins can do anything.
      // Users can create their own document on signup.
      // Users can only GET their own document.
      // Users can only UPDATE their own document.
      allow create: if request.auth != null;
      allow get, update: if isOwner(userId) || isAdmin();
      
      // Allow LIST for authenticated users to enable queries (e.g., checking referral codes),
      // but the 'get' rule above prevents them from reading other users' full documents.
      allow list: if request.auth != null || isAdmin();

      // Rules for all subcollections under a user document
      match /{allPaths=**} {
        allow read, write: if isOwner(userId) || isAdmin();
      }
    }

    // Rules for the 'offers' collection
    match /offers/{offerId} {
      // Admins can do anything.
      // Any authenticated user can read offer documents.
      allow read: if request.auth != null || isAdmin();
      allow write: if isAdmin();
    }
  }
}
