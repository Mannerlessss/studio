
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isUserAuthenticated() {
      return request.auth != null;
    }

    function isUserProfileOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isAdmin() {
      return request.auth.token.admin == true;
    }

    // Admins can read/write anything
    match /{document=**} {
      allow read, write: if isAdmin();
    }
    
    // Rules for the 'users' collection
    match /users/{userId} {
      // A user can read their own profile
      allow read: if isUserAuthenticated() && isUserProfileOwner(userId);

      // A user can create their own profile during signup
      allow create: if isUserAuthenticated() && isUserProfileOwner(userId);
      
      // A user can update their own profile, but cannot change sensitive fields
      allow update: if isUserAuthenticated() && isUserProfileOwner(userId)
                    && request.resource.data.uid == request.auth.uid
                    && request.resource.data.email == resource.data.email
                    && request.resource.data.referralCode == resource.data.referralCode
                    && request.resource.data.membership == resource.data.membership;
      
      // Nobody can delete user profiles
      allow delete: if false;

      // Rules for user subcollections
      match /{subcollection}/{docId} {
        allow read, write: if isUserAuthenticated() && isUserProfileOwner(userId);
      }
    }
    
    // Rules for the 'referralCodes' collection
    // This collection is used for public lookup of referral codes
    match /referralCodes/{code} {
        // Any authenticated user can read a referral code to validate it
        allow get: if isUserAuthenticated();

        // Only a user can create their own referral code document during signup
        // This is handled by backend/transaction logic, but we restrict writes.
        allow write: if isUserAuthenticated(); 
        allow list, delete: if false;
    }
    
    // Rules for the 'offers' collection
    match /offers/{offerId} {
      allow read: if isUserAuthenticated();
      allow write, delete, create: if isAdmin();
    }
  }
}

    