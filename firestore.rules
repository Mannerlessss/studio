rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is an admin.
    // It checks for a custom claim 'role' set to 'admin'.
    function isAdmin() {
      return request.auth.token.role == "admin";
    }

    // Rules for the 'users' collection.
    match /users/{userId} {
      // A user can read/write their own document.
      // An admin can read/write any user document.
      allow read, write: if request.auth.uid == userId || isAdmin();

      // Rules for subcollections within a user document.
      // A user can access their own subcollections (investments, transactions, etc.).
      // An admin can also access any of these subcollections.
      match /{allSubcollections=**} {
        allow read, write: if request.auth.uid == userId || isAdmin();
      }
    }

    // Rules for the global 'plans' collection.
    match /plans/{planId} {
      allow read: if request.auth != null; // Any authenticated user can read plans.
      allow create, update, delete: if isAdmin();    // Only admins can modify plans.
    }

    // Rules for the global 'offers' collection.
    match /offers/{offerId} {
      allow read: if request.auth != null; // Any authenticated user can read offers.
      allow create, update, delete: if isAdmin();    // Only admins can modify offers.
    }
    
    // Explicit rule to allow admins to perform a collection group query on 'withdrawals'.
    // This is required for the admin panel to list all withdrawal requests.
    match /{path=**}/withdrawals/{withdrawalId} {
      allow read, list: if isAdmin();
    }
  }
}