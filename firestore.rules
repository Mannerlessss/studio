rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user has an 'admin' role in their auth token.
    function isAdmin() {
      return request.auth != null && request.auth.token.role == "admin";
    }

    // Rule for the 'users' collection
    match /users/{userId} {
      // Allow users to read and write to their own document.
      // Allow admins to read and write to ANY user document.
      allow read, write: if request.auth.uid == userId || isAdmin();

      // Rules for all subcollections under a user document (e.g., investments, transactions)
      match /{subcollection}/{docId} {
        // Allow users to read/write to their own subcollections.
        // Allow admins to read/write to ANY user's subcollections.
        allow read, write: if request.auth.uid == userId || isAdmin();
      }
    }
    
    // Rule for the 'plans' collection (Global)
    match /plans/{planId} {
      // Any authenticated user can read the plans.
      allow read: if request.auth != null;
      // Only admins can create, update, or delete plans.
      allow write: if isAdmin();
    }

    // Rule for the 'offers' collection (Global)
    match /offers/{offerId} {
      // Any authenticated user can read offers.
      allow read: if request.auth != null;
       // Admins can read the full list of offers
      allow list: if isAdmin();
      // Only admins can create, update, or delete offers.
      allow write: if isAdmin();
    }

    // This rule is CRITICAL for the admin panel.
    // It allows an admin to perform a 'collectionGroup' query on 'withdrawals'.
    // This lets the admin fetch all withdrawal requests from all users at once.
    match /{path=**}/withdrawals/{withdrawalId} {
      allow read: if isAdmin();
    }
  }
}
