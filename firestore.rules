rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check for admin role
    function isAdmin() {
      return request.auth.token.admin == true;
    }
    
    // Helper function to check if user is the owner of the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Admins can do anything
    match /{document=**} {
      allow read, write: if isAdmin();
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      allow read, update: if isOwner(userId);
      allow create: if request.auth != null;
      
      // Rules for all subcollections under a user document
      match /{allPaths=**} {
        allow read, write: if isOwner(userId);
      }
    }
    
    // Rules for the 'offers' collection
    match /offers/{offerId} {
        // Any authenticated user can read offers.
        // Only admins can create, update, or delete them (covered by the admin rule above).
        allow read: if request.auth != null;
    }
  }
}
