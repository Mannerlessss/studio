rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to identify the admin user by email
    function isAdmin() {
      return request.auth.token.email == 'gagansharma.gs107@gmail.com';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // A user can create their own document when signing up
      allow create: if request.auth.uid == userId;

      // A user can read/update their own data. Admin can read/update any user's data.
      allow read, update: if request.auth.uid == userId || isAdmin();
      
      // Admin can list all users. Regular users cannot.
      allow list: if isAdmin();
      
      // A user can only delete their own account.
      allow delete: if request.auth.uid == userId;

      // Rules for the 'transactions' subcollection
      match /transactions/{transactionId} {
        // A user can read and create their own transactions. Admins can read any.
        allow read, create: if request.auth.uid == userId;
        allow get, list: if isAdmin();
      }
      
      // Rules for the 'referrals' subcollection
      match /referrals/{referralId} {
        // A user can read and create their own referral entries. Admins can read any.
        allow read, create: if request.auth.uid == userId;
        allow get, list: if isAdmin();
      }

      // Rules for the 'withdrawals' subcollection
      match /withdrawals/{withdrawalId} {
         // A user can create and read their own withdrawal requests.
        allow create, read: if request.auth.uid == userId;
        // Admin can read and update any withdrawal request.
        allow get, list, update: if isAdmin();
      }
    }

    // Rules for the 'offers' collection
    match /offers/{offerId} {
      // Any authenticated user can view the list of offers.
      allow read: if request.auth != null;
      // Only admins can create, update, or delete offers.
      allow write: if isAdmin();
    }
  }
}
