rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAdmin() {
      // The admin's email is hardcoded for security.
      return request.auth != null && request.auth.token.email == 'gagansharma.gs107@gmail.com';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // A user can read or write to their own document.
      // An admin can read or write to any user document.
      allow read, write: if request.auth.uid == userId || isAdmin();
      
      // An admin can list all users. Regular users cannot.
      allow list: if isAdmin();

      // Rules for user subcollections
      match /transactions/{transactionId} {
        // A user can create and read their own transactions.
        allow read, create: if request.auth.uid == userId;
      }

      match /referrals/{referralId} {
        // A user can manage their own referral list.
        allow read, create, update: if request.auth.uid == userId;
      }

      match /withdrawals/{withdrawalId} {
        // A user can create and read their own withdrawal requests.
        allow read, create: if request.auth.uid == userId;
        // An admin can update any withdrawal request (e.g., to approve/reject it).
        allow update: if isAdmin();
      }
    }
    
    // Rule for the 'withdrawals' collection group.
    // This allows the admin to query across all users' withdrawal subcollections.
    match /{path=**}/withdrawals/{withdrawalId} {
        allow read, list: if isAdmin();
    }

    // Rules for the 'offers' collection
    match /offers/{offerId} {
      // Any authenticated user can read the offers.
      allow read: if request.auth != null;
      // Only an admin can list, create, update, or delete offers.
      allow list, create, update, delete: if isAdmin();
    }
  }
}
