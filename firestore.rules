rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if the user is an admin
    function isAdmin() {
      return request.auth != null && request.auth.token.email == 'gagansharma.gs107@gmail.com';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Admin can read/write any user document
      // A specific user can read/update their own document
      allow read, update: if request.auth.uid == userId || isAdmin();
      
      // Only authenticated users can create their own user document
      allow create: if request.auth.uid == userId;
      
      // Admin can list all user documents
      allow list: if isAdmin();
      
      // Rules for user subcollections
      match /transactions/{transactionId} {
        // Users can read/create their own transactions, Admin can read any
        allow read, create: if request.auth.uid == userId;
        allow list: if isAdmin();
      }
      
      match /referrals/{referralId} {
        // Users can manage their own referrals, Admin can read any
        allow read, create, update: if request.auth.uid == userId;
        allow list: if isAdmin();
      }
      
      match /withdrawals/{withdrawalId} {
         // Users can read/create their own withdrawals
        allow read, create: if request.auth.uid == userId;
        // Admins can read/update any withdrawal request
        allow update: if isAdmin();
      }
    }
    
    // Explicitly allow admin to list the withdrawals collection group
    match /{path=**}/withdrawals/{withdrawalId} {
      allow read: if isAdmin();
    }

    // Rules for the 'offers' collection
    match /offers/{offerId} {
      // Anyone can read offer codes (for redemption)
      allow read: if request.auth != null;
      // Only admins can create, update, delete, and list offer codes
      allow list, create, update, delete: if isAdmin();
    }
  }
}
    