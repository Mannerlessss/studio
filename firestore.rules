rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isAdmin() {
      // Check if the user is an admin.
      // Note: This relies on a custom claim { admin: true } being set.
      return request.auth.token.admin == true;
    }

    // USERS
    // Admins can read/write any user document.
    // Users can only read/write their own document.
    match /users/{userId} {
      allow read, update, delete: if request.auth.uid == userId || isAdmin();
      allow create: if request.auth.uid == userId;

      // USERS SUBCOLLECTIONS
      // A user owns all their subcollection documents. Admins can read them.
       match /{allSubcollections=**} {
         allow read, write: if request.auth.uid == userId || isAdmin();
       }
    }
    
    // WITHDRAWALS (COLLECTION GROUP)
    // This is required for the admin panel to query all withdrawals at once.
    // Admins can list and read all withdrawals from any user.
    match /{path=**}/withdrawals/{withdrawalId} {
        allow read: if isAdmin();
    }
    
    // OFFERS (GLOBAL)
    // Any authenticated user can read offers.
    // Only admins can create, update, or delete them.
    match /offers/{offerId} {
        allow read: if request.auth != null;
        allow write: if isAdmin();
    }

    // PLANS (GLOBAL)
    // Any authenticated user can read plans.
    // Only admins can create, update, or delete them.
    match /plans/{planId} {
        allow read: if request.auth != null;
        allow write: if isAdmin();
    }
  }
}